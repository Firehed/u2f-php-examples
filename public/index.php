<?php

/* declare(strict_types=1); */

/**
 * This file automatically @generated by bin/api api:generateFrontController
 */
use Firehed\API\Dispatcher;
use Firehed\API\ErrorHandler;
use Psr\Log\LoggerInterface;
use Psr\Log\NullLogger;
use Zend\Diactoros\ServerRequestFactory;

// Set CWD to repo root
chdir(__DIR__.'/..');

// Composer autoloader
require 'vendor/autoload.php';

$config = require 'config.php';

if ($config && $config->has(LoggerInterface::class)) {
    $logger = $config->get(LoggerInterface::class);
} else {
    $logger = new NullLogger();
}

//temp

$handler = new ErrorHandler($logger);
// Convert all levels of PHP errors to ErrorExceptions
set_error_handler([$handler, 'handleError'], -1);

// Handle the 'error handler threw an exception' case
set_exception_handler([$handler, 'handleThrowable']);

session_start();

$response = (new Dispatcher())
    ->addMiddleware(new Firehed\Webauthn\Middleware\CORS())
    ->addMiddleware(new Firehed\Webauthn\Middleware\PublicFileMiddleware())
    ->setContainer($config)
    ->dispatch(ServerRequestFactory::fromGlobals());

Firehed\API\ResponseRenderer::render($response);
